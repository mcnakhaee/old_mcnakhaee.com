<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>social network analysis | Muhammad Chenariyan Nakhaee</title>
    <link>/categories/social-network-analysis/</link>
      <atom:link href="/categories/social-network-analysis/index.xml" rel="self" type="application/rss+xml" />
    <description>social network analysis</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Thu, 15 Oct 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/avatar.jpg</url>
      <title>social network analysis</title>
      <link>/categories/social-network-analysis/</link>
    </image>
    
    <item>
      <title>Tidy Tuesday Week 37: NLP and Friends</title>
      <link>/post/2020-10-15-tidy-tuesday-week-37-nlp-and-friend/</link>
      <pubDate>Thu, 15 Oct 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020-10-15-tidy-tuesday-week-37-nlp-and-friend/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;I experience a few difficult and sad moments in my life in the past few months and it was not particularly an easy job for me to cope with these hard moments. However, I found a medicine to fight the sadness that was caused by these painful experience: watching Friends! I have watched Friends many many times but still it can bring smile to my face. Every time I feel being sad, I just start to watch several episodes on Friends, one after another and the laughter does the rest!&lt;/p&gt;
&lt;p&gt;So, when I realized that the dataset we are going to work with in the 37th week of 2020 Tidy Tuesdays project, I was absolutely thrilled and excited to get my hands on this dataset and analyze it. As a big fan of Friends, many ideas popped into my head on how I can make an interesting analysis on this dataset. In this post, I will go through three of them:
1. In Which locations (scenes) Friends was most filmed?
2. How characters in the show interacted with each other?
3. What kinds of actions female and male characters in the show were doing?&lt;/p&gt;
&lt;p&gt;I will addressed these three questions in the rest of this post!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(ggthemes)
library(tidytuesdayR)
library(rsyntax)
library(spacyr)
library(tidytext)
library(tidygraph)
library(igraph)
library(ggraph)
library(hrbrthemes)
library(DT)
spacy_initialize(model = &amp;quot;en_core_web_lg&amp;quot;)

theme_set(  theme_fivethirtyeight()) 
theme_update(
    text = element_text(family = &amp;#39;Poppins Light&amp;#39;, color = &amp;#39;#774936&amp;#39;),
    plot.title = element_text(margin = margin(t = 10, b = 10)),
    plot.subtitle = element_text(margin = margin(b = 20)),
    axis.text.y = element_blank(),
    plot.background = element_rect(fill = &amp;#39;#FFFAF0&amp;#39;),
    panel.background = element_rect(fill = &amp;#39;#FFFAF0&amp;#39;),
    legend.position = &amp;#39;none&amp;#39;,
    panel.grid.major  = element_line(
      color = &amp;#39;#eddcd2&amp;#39;,
      size = 0.5,
      linetype = &amp;#39;dashed&amp;#39;
    ),
    panel.grid.minor = element_line(
      color = &amp;#39;#eddcd2&amp;#39;,
      size = 0.01,
      linetype = &amp;#39;dashed&amp;#39;
    )
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let us load the Friends dataset using the handy &lt;code&gt;tt_load&lt;/code&gt; function from the &lt;code&gt;tidytuesdayR&lt;/code&gt; package!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tt &amp;lt;- tt_load(&amp;quot;2020-09-08&amp;quot;)
friends_df &amp;lt;- tt$friends &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It returns three tables but since the data that I need , I will only be working with the friends transcript dataset.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;friends_df %&amp;gt;% 
  head(20) %&amp;gt;% 
  datatable()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;friends_df &amp;lt;- tt$friends &lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;top-locations&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Top Locations&lt;/h3&gt;
&lt;p&gt;Now let’s find out which locations this show was filmed the most. This information is available in the &lt;code&gt;text&lt;/code&gt; column.
In this column,Usually the location where the scene took place comes after the &lt;code&gt;Scene:&lt;/code&gt; string . So, we only need to find and filter rows that have this string. Unfortunately, this information is not available for the first and the last two seasons of Friends!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;friends_df %&amp;gt;%
  filter(str_detect(text, fixed(&amp;#39;Scene:&amp;#39;))) %&amp;gt;% 
  head() %&amp;gt;% 
  datatable()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;scences &amp;lt;- friends_df %&amp;gt;%
  filter(str_detect(text, fixed(&amp;#39;Scene:&amp;#39;))) %&amp;gt;%
  rowwise() %&amp;gt;%
  mutate(
    location = if_else(season &amp;lt;9,str_split(text, &amp;#39;,&amp;#39;)[[1]][1],str_split(text, fixed(&amp;#39;.&amp;#39;))[[1]][1]),
    location = str_remove_all(location, &amp;#39;erm&amp;#39;),
    location = str_remove_all(location, fixed(&amp;#39;erm&amp;#39;)),
    location = str_remove(location, fixed(&amp;#39;[Scene:&amp;#39;)) ,
    location = str_trim(location)
  ) %&amp;gt;% 
  filter(!str_detect(location, fixed(&amp;#39;]&amp;#39;)),
         !location %in% c(&amp;#39;Monica&amp;#39;, &amp;#39;Chandler&amp;#39;))

scenes_location_count &amp;lt;- scences %&amp;gt;%
  count(location, sort = TRUE) %&amp;gt;%
  filter(n &amp;gt; 10 )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now let’s sort and look at the top locations in Friends:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;scenes_location_count  %&amp;gt;% 
  DT::datatable()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So, Central Perk was the location where most scenes took place!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt; scenes_location_count %&amp;gt;% 
  ggplot(aes(x = fct_reorder(location,n),n)) +
  geom_col(fill = &amp;#39;#ef476f&amp;#39;) +
  coord_flip() +
  labs(title = &amp;#39;Most Filmed Locations in Friends&amp;#39; ) +
  theme_fivethirtyeight() +
  theme(legend.position = &amp;#39;none&amp;#39;, 
        axis.text.x = element_text(angle = 90))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But let’s look at how many times each different locations&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;scences %&amp;gt;% 
  count(season,location,sort = TRUE) %&amp;gt;% 
  filter(n&amp;gt;5) %&amp;gt;% 
  ggplot(aes(x= season,y=n)) +
  geom_line(color = &amp;#39;red&amp;#39;,size = 1)+
  geom_point(color = &amp;#39;red&amp;#39;,size = 3)+
  labs(title = &amp;#39;Where Was Freinds Filmed?&amp;#39;,subtitle = &amp;#39;&amp;#39;) +
  facet_wrap(~location) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;it inspired me to perform the same analysis on the Friends’ transcript. However, my approach is slightly different from what Julia Sigles employed. She used bigrams to find a combination of pronouns and verbs while My approach uses named entity recognition (NER) form the natural language processing literature. In my previous posts, I used Spacy and Python to extract named entities from text data, but in this post I will exclusively use
the &lt;code&gt;spacyr&lt;/code&gt; package in R (which behind the scene uses Spacy and python).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;female_characters &amp;lt;- c(&amp;#39;monica&amp;#39;,&amp;#39;rachel&amp;#39;,&amp;#39;phoebe&amp;#39;,&amp;#39;emily&amp;#39;,&amp;#39;carol&amp;#39;,&amp;#39;janice&amp;#39;,&amp;#39;susan&amp;#39;,&amp;#39;kathy&amp;#39;,&amp;#39;elizabeth&amp;#39;,&amp;#39;she&amp;#39;)
male_characters &amp;lt;- c(&amp;#39;ross&amp;#39;,&amp;#39;joey&amp;#39;,&amp;#39;chandler&amp;#39;,&amp;#39;mike&amp;#39;,&amp;#39;richard&amp;#39;,&amp;#39;gunther&amp;#39;,&amp;#39;paolo&amp;#39;,&amp;#39;bob&amp;#39;,&amp;#39;paul&amp;#39;,&amp;#39;frank&amp;#39;,&amp;#39;he&amp;#39;)


male_speakers &amp;lt;- c(&amp;#39;Ross Geller&amp;#39;,&amp;#39;Chandler Bing&amp;#39;,&amp;#39;Joey Tribbiani&amp;#39;,&amp;#39;Richard Burke&amp;#39;,&amp;#39;Mike Hannigan&amp;#39;,&amp;#39;Frank Buffay Jr.&amp;#39;,&amp;#39;Jack Geller&amp;#39;,&amp;#39;David&amp;#39;,&amp;#39;Peter Becker&amp;#39;,&amp;#39;Eddie Menuek&amp;#39;,&amp;#39;Gunther&amp;#39;,&amp;#39;Paul Stevens&amp;#39;)

female_speakers &amp;lt;- c(&amp;#39;Rachel Green&amp;#39;,&amp;#39;Phoebe Buffay&amp;#39;,&amp;#39;Janice Litman Goralnik&amp;#39;,&amp;#39;Monica Geller&amp;#39;,&amp;#39;Emily Waltham&amp;#39;,&amp;#39;Charlie Wheeler&amp;#39;,&amp;#39;Judy Geller&amp;#39;,&amp;#39;Amy Green&amp;#39;,&amp;#39;Carol Willick&amp;#39;,&amp;#39;Mona&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I start by separating the text column into sentences and give each sentence a unique id which I use later for joining dataframes.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;friends_sentences &amp;lt;- friends_df %&amp;gt;%
  unnest_tokens(sentence, text, token = &amp;#39;sentences&amp;#39;) %&amp;gt;%
  rownames_to_column() %&amp;gt;%
  rename(doc_id = rowname,
         text = sentence) 
friends_sentences %&amp;gt;%
  tail() %&amp;gt;% 
  datatable()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The main function that I am going to use from &lt;code&gt;spacyr&lt;/code&gt; is the ‘spacy_parse’ function which can return named entities, dependencies, part-of-speech tags, etc. By default, it does not give us dependencies so we need to set &lt;code&gt;dependency = TRUE&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tq &amp;lt;- tquery(pos = &amp;quot;VERB&amp;quot;, label = &amp;quot;verb&amp;quot;, children(relation = &amp;quot;nsubj&amp;quot;, label = &amp;quot;subject&amp;quot;))
tokens_df_dep &amp;lt;- friends_sentences %&amp;gt;% 
  spacy_parse(dependency = TRUE) %&amp;gt;%
  annotate_tqueries(&amp;quot;annotation&amp;quot;, query_name = tq) %&amp;gt;%
  filter(!is.na(annotation))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now I join tokens that I created using spacy and the firends sentences dataframe.&lt;/p&gt;
&lt;p&gt;I will pull the documnets id that:&lt;/p&gt;
&lt;p&gt;token&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;friends-network&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Friends’ Network&lt;/h3&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>How Do People Share on Telegram?</title>
      <link>/project/2020-01-01-how-do-people-share-on-telegram/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      <guid>/project/2020-01-01-how-do-people-share-on-telegram/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


</description>
    </item>
    
  </channel>
</rss>
